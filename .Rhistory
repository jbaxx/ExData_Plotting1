help()
man
load
find.package('devtools')
find.package("devtools")
search()
find.package('utils')
install.packages('KernSmooth')
library('KernSmooth')
getwd()
add2<-function(x,y){}
x+y
add2<-function(x,y){
x+y
}
add(5,3)
add2(5,3)
aboveany<-function(x,y){
use <- x > y
x[y]
}
ay<-1:50
aboveany(ay,45)
aboveany<-function(x,y){
use <- x > y
x[use]
}
aboveany(ay,45)
aboveany<-function(x,y=10){
use <- x > y
x[use]
}
aboveany(ay)
colmeann<-function(df){
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
airquality
colmeann(airquality)
colmeann<-function(df){
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(df[,i])
}
means
}
colmeann(airquality)
colmeann<-function(df){
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(df[,i],na.rm=TRUE)
}
means
}
colmeann(airquality)
rnorm(10)
abs(rnorm(10))
search()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
a<-1:10
makeVector(a)
a$getmean
makeVector(a)$getmean
cakeVector<-function(x=numeric()){
setmean<-function(mean) m<<-mean
}
cakeVector(a)
a$setmean
cakeVector(a)$setmean
x<-makeVector(a)
x$getmean
x$getmean()
x$setmean()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean(x)
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x<-makeVector(a)
x$setmean()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(x) m <<- mean(x)
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x<-makeVector(a)
x$setmean()
x
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- x+2
setmean <- function(x) m <<- mean(x)
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
z<-makeVector(1:10)
z$get
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- mean(x)
setmean <- function(x) m <<- mean(x)
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
z<-makeVector(1:10)
mean(1:10)
z$get
z$get()
z$set(1:4)
z$get
z<-makeVector(1:10)
z$get
s<-makeVector(1:9)
s$get
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
ack<-makeVector(1:8)
ack$get
ack$set
ack$set(1:8)
ack$get
ack$get()
acd<-mackeVector()
acd<-makeVector()
acd$set
acd$set()
acd<-makeVector(1:8)
acd$set()
acd$get()
acd$setmean()
acd$getmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(acd)
acd$get()
acd$getmean()
cachemean(acd)
numeric()
vector()
matrix()
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
l<-matrix(c(4,2,7,6),nrow=2,ncol=2)
l
ags<-makeCacheMatrix(l)
ags$get()
asd$getinverse()
ags$getinverse()
cacheSolve(ags)
cacheSolve(ags)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
acv<-makeCacheMatrix(l)
cacheSolve(acv)
cacheSolve(acv)
cacheSolve(acv)
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
else {data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m}
}
ac<-makeCacheMatrix(l)
cacheSolve(ac)
cacheSolve(ac)
cacheSolve(ac)
setwd("./Documents/ExpData Class/Project 1")
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
#gdatas<-gdata[grepl("1/2/2007",gdata$IDate) | grepl("2/2/2007",gdata$IDate),]
#gdatas<-gdata[grepl(paste(c("1/2/2007","2/2/2007"),collapse="|"),gdata$Date),]
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
#table(gdatas$Date)
gdatat<-gdatas[,c(11,3:9)]
png(file="plot1.png")
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
dev.off()
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power",bg="gray")
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
setwd("./Documents/ExpData Class/Project 1/ExData_Plotting1")
setwd("./ExData_Plotting1")
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
#gdatas<-gdata[grepl("1/2/2007",gdata$IDate) | grepl("2/2/2007",gdata$IDate),]
#gdatas<-gdata[grepl(paste(c("1/2/2007","2/2/2007"),collapse="|"),gdata$Date),]
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
#table(gdatas$Date)
gdatat<-gdatas[,c(11,3:9)]
png(file="plot1.png")
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
dev.off()
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
rm(gdata)
#gdatas<-gdata[grepl("1/2/2007",gdata$IDate) | grepl("2/2/2007",gdata$IDate),]
#gdatas<-gdata[grepl(paste(c("1/2/2007","2/2/2007"),collapse="|"),gdata$Date),]
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
#table(gdatas$Date)
gdatat<-gdatas[,c(11,3:9)]
rm(gdatas)
png(file="plot1.png")
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
dev.off()
str(gdatat)
plot(gdatat$DateTime,gdatat$Global_active_power)
plot(gdatat$DateTime,gdatat$Global_active_power,type="n")
line(gdatat$DateTime,gdatat$Global_active_power)
lines(gdatat$DateTime,gdatat$Global_active_power)
lines(gdatat$DateTime,gdatat$Global_active_power,ylab="Global Active Power")
plot(gdatat$DateTime,gdatat$Global_active_power,type="n",ylab="Global Active Power")
lines(gdatat$DateTime,gdatat$Global_active_power)
plot(gdatat$DateTime,gdatat$Global_active_power,type="n",ylab="Global Active Power",xlab="")
lines(gdatat$DateTime,gdatat$Global_active_power)
setwd("./Documents/ExpData Class/Project 1/ExData_Plotting1")
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
rm(gdata)
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
gdatat<-gdatas[,c(11,3:9)]
rm(gdatas)
png(file="plot2.png")
plot(gdatat$DateTime,gdatat$Global_active_power,type="n",ylab="Global Active Power",xlab="")
lines(gdatat$DateTime,gdatat$Global_active_power)
dev.off()
plot(gdatat$DateTime,gdatat$Sub_metering_1,type="n",ylab="Energy sub metering")
plot(gdatat$DateTime,gdatat$Sub_metering_1,type="n",ylab="Energy sub metering",xlab="")
lines(gdatat$DateTime,gdatat$Sub_metering_1)
lines(gdatat$DateTime,gdatat$Sub_metering_2,col="red")
lines(gdatat$DateTime,gdatat$Sub_metering_3,col="blue")
lines(gdatat$DateTime,gdatat$Sub_metering_3,col="blue",legend="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch=1)
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch=2)
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch=3)
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch=4)
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch=-)
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="-")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="----")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="----",col=c("black","red","blue"))
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
rm(gdata)
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
gdatat<-gdatas[,c(11,3:9)]
rm(gdatas)
png(file="plot3.png")
plot(gdatat$DateTime,gdatat$Sub_metering_1,type="n",ylab="Energy sub metering",xlab="")
lines(gdatat$DateTime,gdatat$Sub_metering_1)
lines(gdatat$DateTime,gdatat$Sub_metering_2,col="red")
lines(gdatat$DateTime,gdatat$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="-",col=c("black","red","blue"))
dev.off()
par(mfrow=c(2,2))
hist(gdatat$Global_active_power,col="red",xlab="Global Active Power (Kilowatts)",main="Global Active Power")
plot(gdatat$DateTime,gdatat$Global_active_power,type="n",ylab="Global Active Power",xlab="")
lines(gdatat$DateTime,gdatat$Global_active_power)
plot(gdatat$DateTime,gdatat$Sub_metering_1,type="n",ylab="Energy sub metering",xlab="")
lines(gdatat$DateTime,gdatat$Sub_metering_1)
lines(gdatat$DateTime,gdatat$Sub_metering_2,col="red")
lines(gdatat$DateTime,gdatat$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="-",col=c("black","red","blue"))
plot(gdatat$DateTime,gdatat$Global_reactive_power,type="n",ylab="Global Reactive Power",xlab="")
lines(gdatat$DateTime,gdatat$Global_reactive_power)
str(gdatat)
if(!file.exists("./household_power_consumption.txt")){
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",destfile="pdata2.zip",method="curl")
unzip("pdata2.zip")
}
gdata<-read.table("household_power_consumption.txt",header=TRUE,sep=";")
gdata$Global_active_power<-as.numeric(levels(gdata$Global_active_power)[gdata$Global_active_power])
gdata$Global_reactive_power<-as.numeric(levels(gdata$Global_reactive_power)[gdata$Global_reactive_power])
gdata$Voltage<-as.numeric(levels(gdata$Voltage)[gdata$Voltage])
gdata$Global_intensity<-as.numeric(levels(gdata$Global_intensity)[gdata$Global_intensity])
gdata$Sub_metering_1<-as.numeric(levels(gdata$Sub_metering_1)[gdata$Sub_metering_1])
gdata$Sub_metering_2<-as.numeric(levels(gdata$Sub_metering_2)[gdata$Sub_metering_2])
gdata$Date<-as.character(gdata$Date, stringsAsFactors=FALSE)
gdata$Time<-as.character(gdata$Time, stringsAsFactors=FALSE)
gdatas<-gdata[grepl(paste(c("^1/2/2007$","^2/2/2007$"),collapse="|"),gdata$Date),] #Real exact match
rm(gdata)
gdatas$Date<-as.Date(gdatas$Date,"%d/%m/%Y")
gdatas$DateTimex<-paste(gdatas$Date,gdatas$Time)
gdatas$DateTime<-strptime(gdatas$DateTimex,"%Y-%m-%d %H:%M:%S")
gdatat<-gdatas[,c(11,3:9)]
rm(gdatas)
png(file="plot4.png")
par(mfrow=c(2,2))
plot(gdatat$DateTime,gdatat$Global_active_power,type="n",ylab="Global Active Power",xlab="")
lines(gdatat$DateTime,gdatat$Global_active_power)
plot(gdatat$DateTime,gdatat$Voltage,type="n",ylab="Voltage",xlab="Datetime")
lines(gdatat$DateTime,gdatat$Voltage)
plot(gdatat$DateTime,gdatat$Sub_metering_1,type="n",ylab="Energy sub metering",xlab="")
lines(gdatat$DateTime,gdatat$Sub_metering_1)
lines(gdatat$DateTime,gdatat$Sub_metering_2,col="red")
lines(gdatat$DateTime,gdatat$Sub_metering_3,col="blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),pch="-",col=c("black","red","blue"))
plot(gdatat$DateTime,gdatat$Global_reactive_power,type="n",ylab="Global Reactive Power",xlab="Datetime")
lines(gdatat$DateTime,gdatat$Global_reactive_power)
dev.off()
